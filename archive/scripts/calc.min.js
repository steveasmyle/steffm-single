/*
  calculator.min.js
  (c) Jason M. Knight
  January 2023
  https://cutcodedown.com
*/
const isNodeOrNonObject=a=>"object"!==typeof a||a instanceof Node;Object.defineProperties(document,{__make:{value:(a,...b)=>{a=document.createElement(a);b.length&&a.__attach(...b);return a}},__makeModal:{value:(a,b,c,...d)=>{c=document.__make("div",["h2",["a",{hidden:!0,href:"#"},["span","Close Modal"]],c],...d);document.body.__make(a,{id:b,className:"modal"},["a",{hidden:!0,href:"#",tabindex:"-1"},["span","Close Modal"]],c);return c}}});
Object.defineProperties(Element.prototype,{__attach:{value:function(...a){for(let b of a)void 0!==b&&(b instanceof Array?this.__make(...b):isNodeOrNonObject(b)?this.append(b):(b.dataset&&(Object.assign(this.dataset,b.dataSet),delete b.dataset),b.placement&&(this.dataset.__domMakePlacement=String(b.placement).toLowerCase(),delete b.placement),b.style&&(Object.assign(this.style,b.style),delete b.style),Object.assign(this,b)));return this}},__make:{value:function(a,...b){a=document.__make(a,...b);this.insertAdjacentElement(a.dataset.__domMakePlacement||
"beforeend",a);delete a.dataset.__domMakePlacement;return a}}});Object.defineProperty(Object.prototype,"__getPrevNext",{value:function(a){const b=Object.keys(this);a=b.indexOf(a);return 0<=a?{prev:b[a-1],next:b[a+1]}:{prev:void 0,next:void 0}}});addEventListener("keypress",a=>{2>location.hash.length||"Escape"!==a.key||(a=document.getElementById(location.hash.substr(1)))&&a.classList.contains("modal")&&(location.hash="#")});
if(1<location.hash.length){const a=location.hash;location.hash="";addEventListener("load",()=>{location.hash=a})};const flags$jscomp$5={};let clearNextEntry=!1;
const flagData={total:{title:"Viewing Total",text:"T"},entry:{title:"Viewing Entry",text:"E"},add:{className:"smallGlyph",title:"Addition operator active",text:"+"},subtract:{className:"smallGlyph",title:"Subtraction operator active",text:"-"},multiply:{title:"Multiplication operator active",text:"X"},divide:{className:"smallGlyph",title:"Divide operator active",text:"\u00f7"},overflow:{title:"Overflow, result was too large for this calculator",text:"OVF"},divideByZero:{title:"Divide by zero",text:"DV0"},
error:{title:"An error has occurred, you must hit 'clear' to continue.",text:"ERR"},memory:{title:"This is a value in memory",text:"MEM"}},flagSet=(a,b)=>{b=!!b;a=flagData[a];a.value=b;a.element.textContent=b?a.text:"";return b},operatorSet=a=>{for(let b of["add","subtract","multiply","divide"]){const c=flagData[b],d=a==b;c.value=d;c.element.textContent=d?c.text:""}},flagClear=a=>{flagData[a].value=!1;flagData[a].element.textContent=""};
Object.defineProperties(flags$jscomp$5,{clear:{value:function(){for(let a in this)flagClear(a);localStorage.getItem("calculatorMemory")&&(flags$jscomp$5.memory=!0)}},element:{value:document.__make("ul",{className:"flags"})},total:{enumerable:!0,get:()=>flagData.total.value,set:a=>flagSet("entry",!flagSet("total",a))},entry:{enumerable:!0,get:()=>flagData.entry.value,set:a=>flagSet("total",!flagSet("entry",a))},add:{enumerable:!0,get:()=>flagData.add.value,set:a=>operatorSet("add",a)},subtract:{enumerable:!0,
get:()=>flagData.subtract.value,set:a=>operatorSet("subtract",a)},multiply:{enumerable:!0,get:()=>flagData.multiply.value,set:a=>operatorSet("multiply",a)},divide:{enumerable:!0,get:()=>flagData.divide.value,set:a=>operatorSet("divide",a)},overflow:{enumerable:!0,get:()=>flagData.overflow.value,set:function(a){flagSet("overflow",a)&&(calculator.total=0,calculator.entry="",this.error=!0)}},divideByZero:{enumerable:!0,get:()=>flagData.divideByZero.value,set:function(a){flagSet("divideByZero",a)&&(this.error=
!0)}},error:{enumerable:!0,get:()=>flagData.error.value,set:a=>{flagSet("error",a)&&outputs$jscomp$1.set("-","------------")}},memory:{enumerable:!0,get:()=>flagData.memory.value,set:a=>flagSet("memory",a)}});for(let [a,b]of Object.entries(flagData)){let c=flagData[a].element=flags$jscomp$5.element.__make("li",{title:b.title});c.dataset.text=b.text;b.className&&(c.className=b.className)}
var JSCompiler_object_inline_action_0={clear:()=>{flags$jscomp$5.clear();calculator.entry=calculator.operator="";calculator.total=0},clearEntry:()=>calculator.entry="",negate:()=>{let a=flags$jscomp$5.entry?"entry":"total";calculator[a]=-calculator[a]},percent:()=>calculator[flags$jscomp$5.entry?"entry":"total"]/=100,sqrt:()=>{let a=flags$jscomp$5.entry?"entry":"total";calculator[a]=Math.sqrt(calculator[a])}},JSCompiler_object_inline_operator_1={add:()=>calculator.total=+calculator.total+ +calculator.entry,
subtract:()=>calculator.total-=calculator.entry,multiply:()=>calculator.total*=calculator.entry,divide:()=>{Number(calculator.entry)?calculator.total/=calculator.entry:(flags$jscomp$5.divideByZero=!0,calculator.total=Infinity)}};
const testEntryClear=()=>{clearNextEntry&&(calculator.entry="",clearNextEntry=!1)},events={action:a=>{testEntryClear();JSCompiler_object_inline_action_0[a.currentTarget.value]()},entry:a=>{testEntryClear();let b=String(calculator.entry);maxLength=(hasPoint=-1!==b.indexOf("."))?13:12;entryPoint="."===a.currentTarget.textContent;b.length>=maxLength||hasPoint&&entryPoint||(calculator.entry=!calculator.entry&&entryPoint?"0.":b+a.currentTarget.textContent)},memory:{add:a=>{flags$jscomp$5.error||(calculator.memory+=
+output$jscomp$2.textContent)},clear:a=>{flags$jscomp$5.error||(calculator.memory=null)},subtract:a=>{flags$jscomp$5.error||(calculator.memory-=+output$jscomp$2.textContent)},read:a=>{flags$jscomp$5.error||(clearNextEntry=!0,calculator.entry=calculator.memory)}},openModal:a=>location.hash=a.currentTarget.value,operator:a=>{if(!flags$jscomp$5.error){if(calculator.operator){if(!clearNextEntry||calculator.operator==a.currentTarget.value)JSCompiler_object_inline_operator_1[calculator.operator]()}else calculator.total=
calculator.entry;clearNextEntry=!0;calculator.operator=a.currentTarget.value}},view:{total:a=>calculator.total=calculator.total,entry:a=>calculator.entry=calculator.entry}},power=document.__make("div",{className:"power"},"POWER"),outputs$jscomp$1={sign:document.createElement("var"),whole:new Text,point:document.createElement("span"),mantissa:new Text},output$jscomp$2=document.__make("output",...Object.values(outputs$jscomp$1));fauxBody=document.getElementById("fauxBody");
calculator={element:fauxBody.__make("section",{className:"calc"},power,["h2","Computron",["span","V90"]],output$jscomp$2,flags$jscomp$5.element)};Object.defineProperty(events,"get",{value:function(a,b){a=this[a];return"object"===typeof a?a[b]:a}});Object.defineProperty(outputs$jscomp$1,"set",{value:function(a,b,c="",d=""){this.sign.textContent=a;this.whole.textContent=b;this.point.textContent=c;this.mantissa.textContent=d}});
const show=(a,b)=>{if(!flags$jscomp$5.error)if(a)if(isFinite(a)){a=b?Number(a).toFixed(11).replace(/0+$/g,""):String(a);const c=0>a?"-":"";c&&(a=a.substr(1));const d=a.indexOf(".");if(0<=d)if(1>a)outputs$jscomp$1.set(c,"0",".",a.substr(d+1,11));else{const e=a.substr(0,d);a=a.substr(d+1);if(12<e.length)return flags$jscomp$5.overflow=!0;0<a.length||!b?outputs$jscomp$1.set(c,e,".",a.substr(0,12-e.length)):outputs$jscomp$1.set(c,e)}else 12<a.length?flags$jscomp$5.overflow=!0:outputs$jscomp$1.set(c,a)}else flags$jscomp$5.overflow=
!0;else outputs$jscomp$1.set("","0")};let operator$jscomp$2="",total=0,entry="";
Object.defineProperties(calculator,{entry:{get:()=>entry,set:a=>{entry=a;flags$jscomp$5.entry=!0;show(a);calculator.element.classList["55378008"==entry?"add":"remove"]("flip")}},total:{get:()=>total,set:a=>{total=a;flags$jscomp$5.total=!0;show(a,!0)}},operator:{get:()=>operator$jscomp$2,set:a=>{(operator$jscomp$2=a)&&(flags$jscomp$5[operator$jscomp$2]=!0)}},memory:{get:()=>Number(localStorage.getItem("calculatorMemory"))||0,set:a=>{null===a?(flags$jscomp$5.memory=!1,localStorage.removeItem("calculatorMemory")):
(localStorage.setItem("calculatorMemory",a),flags$jscomp$5.memory=!0)}}});
const buttonSets=[[["VT","T","view","total"],["VE","E","view","entry"],["MC","Delete","memory","clear","index"],["M+","PageUp","memory","add"],["M-","PageDown","memory","subtract"],["MR","Insert","memory","read"]],[["C","Escape","action","clear","clear wide"],["CE","Backspace","action","clearEntry","clear doubleDigit"],["?","F1","openModal","help"]],[["\u221a","S","action","sqrt"],["\u00b1","N","action","negate"],["%","P","action","percent"],["\u00f7","/","operator","divide"]],[["7","7","entry"],
["8","8","entry"],["9","9","entry"],["X","*","operator","multiply"]],[["4","4","entry"],["5","5","entry",null,"index"],["6","6","entry"],["-","-","operator","subtract"]],[["1","1","entry"],["2","2","entry"],["3","3","entry"],["+\r\n=","+","operator","add","tall"],["0","0","entry",null,"wide"],[".",".","entry"]]],keys$jscomp$1={},keyAliases={"=":"Enter",X:"*"},keyStateChange=a=>{let b=getKeyButton(a.key);if(b)b.classList["keydown"===a.type?"add":"remove"]("keyDown")},getKeyButton=a=>{1==a.length&&
(a=a.toUpperCase());return keys$jscomp$1[keyAliases[a]||a]};for(const a of buttonSets){const b=calculator.element.__make("fieldset");for(let [c,d,e,f,g]of a)keys$jscomp$1[d]=b.__make("button",{className:e+(g?" "+g:""),onclick:events.get(e,f)},["span",c]),f&&(keys$jscomp$1[d].value=f)}addEventListener("keydown",keyStateChange);addEventListener("keyup",keyStateChange);
addEventListener("keypress",a=>{if(!(1<location.hash.length)){var b=a.key;switch(b){case "Enter":a.preventDefault();if(flags$jscomp$5.error)return;flags$jscomp$5.clear();calculator.operator||(operator="add");JSCompiler_object_inline_operator_1[calculator.operator]();clearNextEntry=!0;return}if(b=getKeyButton(b))a.preventDefault(),b.click()}});calculator.entry="";localStorage.getItem("calculatorMemory")&&(flags$jscomp$5.memory=!0);const template$jscomp$1={keyCell:(a,b)=>{const c=document.createElement("td");values=a[b]instanceof Array?a[b]:[a[b]];className=a[b+"Class"]||"";for(value of values)value?c.__make(b,{className},["span",value]):c.__make("em","none"),className=null;return c},keyCellTables:a=>{let b=[];for(const [c,d]of Object.entries(a)){a=document.__make("tbody");for(const e of d.buttons)a.__make("tr",template$jscomp$1.keyCell(e,"kbd"),template$jscomp$1.keyCell(e,"samp"),["th",{scope:"row"},e.desc]);b.push(document.__make("table",
{className:c},["caption",d.caption],a))}return b},flag:a=>{let b=[];for(const [c,d]of Object.entries(a)){a=document.__make("table");const e=document.__make("article",{className:c},["h3",d.title]);for(const [f,g]of d.flags)a.__make("tr",["th",{scope:"row"},f],["td",g]);d.desc&&e.__make("p",d.desc);e.appendChild(a);b.push(e)}return b},indexLink:(a,b,c,...d)=>{b=document.__make("a",{href:"#"+b},...d);a=a.__make("li",b);c&&(a.className=c);return b},index:(a,b)=>{const c=document.createElement("ul");for(const [d,
e]of Object.entries(docModals))b!==d&&template$jscomp$1.indexLink(c,d,null,e.construct[0]);a.__make("nav",{className:"helpIndex"},c)},pagination:(a,b)=>{const c=docModals.__getPrevNext(b),d=document.createElement("ul");c.prev&&c.prev!==docModalIndex&&template$jscomp$1.indexLink(d,c.prev,"prev",docModals[c.prev].construct[0]);b!==docModalIndex&&template$jscomp$1.indexLink(d,docModalIndex,"index",docModals[docModalIndex].construct[0]);c.next&&template$jscomp$1.indexLink(d,c.next,"next",docModals[c.next].construct[0]);
a.__make("footer",["nav",{className:"helpPagination"},d])}},docModals={help:{construct:["Help Index"],index:!0},about:{construct:["About This Application",["div",{className:"trailingPlate"},["div",{className:"icon_psn"},"K"],"Calculator Demo",["br"],"by Jason M. Knight",["br"],"Paladin Systems North",["br"],"January 2023"],["p","This calculator was created as a demo of how HTML and CSS can be used to draw very complex shapes and layouts without the use of images. Indeed this entire program only uses one separate image file in the form of the canvas desktop. The only other thing that could be considered an image is the use of an SVG file embedded in the CSS to create a noise pattern; again, just another texture."],
["p","This demo also shows how to build elements directly on the DOM, and creating a JSON representation that is more efficient for turning into scripting controlled DOM than attempts to use anything resembling HTML such as JSX.",["i","Though that is to be fair a very subjective matter of opinion. Personally I find JavaScript very bad at working with markup; at least compared to directly using the DOM with a couple helper functions."]],["p","For more information please read ",["a",{href:"https://medium.com/codex/how-css-is-reducing-the-need-for-images-lets-style-a-calculator-ccf9332e56e"},
"my articles on Medium detailing how this was built."]]]},inputAndControls:{construct:["Input And Controls",["p","These tables show the keyboard shortcuts and descriptions corresponding to the on-screen keypad. If more than one key is listed, both are valid."],["article",{className:"reference"},...template$jscomp$1.keyCellTables({memory:{caption:"Memory",buttons:[{kbd:"Del",samp:"MC",desc:"Memory Clear"},{kbd:"PgUp",samp:"M+",desc:"Memory Add"},{kbd:"PgDn",samp:"M-",desc:"Memory Subtract"},{kbd:"Ins",
samp:"MR",desc:"Memory Subtract"}]},commands:{caption:"Commands",buttons:[{kbd:"T",samp:"VT",sampClass:"view",desc:"View Total"},{kbd:"E",samp:"VE",sampClass:"view",desc:"View Entry"},{kbd:"Esc",samp:"C",sampClass:"clear",desc:"Clear All"},{kbd:"Backspace",kbdClass:"wide",samp:"CE",sampClass:"clearEntry",desc:"Clear Entry"},{kbd:"F1",samp:"?",desc:"This Help Screen"}]},modifiers:{caption:"Modifiers",buttons:[{kbd:"S",samp:"\u221a",desc:"Square Root"},{kbd:"N",samp:"\u00b1",desc:"Negate (inverst sign)"},
{kbd:["P","%"],samp:"%",desc:"Percent (divide by 100)"}]},operators:{caption:"Operators",buttons:[{kbd:"/",samp:"\u00f7",desc:"Divide"},{kbd:["*","X"],samp:"X",desc:"Multiply"},{kbd:"-",samp:"-",desc:"Subtract"},{kbd:"+",samp:"+",desc:"Add"},{kbd:["Enter","="],kbdClass:"wide",desc:"Perform current operator, 'add' if none is set."}]},entry:{caption:"Data Entry",buttons:[{kbd:"0",samp:"0",desc:"Zero"},{kbd:"1",samp:"1",desc:"One"},{kbd:"2",samp:"2",desc:"Two"},{kbd:"3",samp:"3",desc:"Three"},{kbd:"4",
samp:"4",desc:"Four"},{kbd:"5",samp:"5",desc:"Five"},{kbd:"6",samp:"6",desc:"Six"},{kbd:"7",samp:"7",desc:"Seven"},{kbd:"8",samp:"8",desc:"Eight"},{kbd:"9",samp:"9",desc:"Nine"},{kbd:".",samp:".",desc:"Decimal Point"}]}})]]},indicatorPanel:{construct:["Indicator Panel",["p","The indicator is a series of lights below the primary display. It shows information about the calculators current state such as the type of information the display is showing, the currently active operator, errors, and if a value is stored in memory."],
["div",{className:"flagArticles"},...template$jscomp$1.flag({views:{title:"Views",desc:"What value the display is currently showing",flags:[["T","Total"],["E","Entry"]]},operators:{title:"Operators",desc:"Which operator the next operator will trigger.",flags:[["+","Add"],["-","Subtact"],["*","Multiply"],["\u00f7","Divide"]]},errors:{title:"Errors",desc:"Note that if you divide by zero or an overflow occurs, the calculator will also trigger the error state.",flags:[["OVF","Overflow, value was too large or small for the calculator's display or accuracy"],
["DV0","Divide by zero"],["ERR","Error, calculator will not respond until you hit the clear button."]]},memory:{title:"Memory",flags:[["MEM","There is a value stored in memory"]]}})]]}};let docModalIndex=null;for([id,data]of Object.entries(docModals))data.element=document.__makeModal("div",id,...data.construct),data.index?(docModalIndex=id,template$jscomp$1.index(data.element,id)):template$jscomp$1.pagination(data.element,id);
